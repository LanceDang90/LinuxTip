Control-c : kill all the command is running 
Alternate + Control + f1-f6 : open terminal
sudo : substitue user do
Command + "+" : increasing the text size in terminal
Commnad + "-" : deceasing the text size



1. killall <name> 
	. kill all the program named <name> in this directory. 
	. Example: when we cannot close Firefox, or other program

2. touch <fileName1> <fileName2> <fileName3>
	. Can create multiple file in this directory
	. Example: touch file1.txt file2.txt
	. Can touch the files to let the system update the time,
		in which the files is touched.
	. Example: touch *.txt


3. which <programName>
	. tell where <prgramName> is located
	. Example

4. ping <webBase> -c 3
	. In the situation if the browser stop working, so we want to
		dect the problem from the browser or computer connectivity.
		Or to check the network is working or not
	. Example: ping www.google.com -c 3
		(3 is setting the limit, if not run 64 times, "control-c" to kill)

5. cat <fileName> 
   cat <fileName> | more
   	. Open a file in terminal
   	. Second command indicate that taking the output of cat to put into the
   		input of more 
   	. Example: cat LinuxTip.txt
   			   cat LinuxTip.txt 

6. less <fileName>
	. Same as "cat" command, however, it allows to move around the file
	. Example: less LinuxTip.txt

7. sudo blkid
	. Check if any drive is working
	. Example: USB, or other program

8. sudo -s
	. Access to the root user, or act like a rooter of the system
	. Dangerous if put in a wrong command
	. Type "exit" to exit

9. su <nameOfUser>
   su - <nameOfUser> 
	. Switch the user, login to <nameOfUser> account
	. - : dash allow you to change thing in <nameOfUser> account
	. Type "exit" to exit
	. Example: su lancedang
			   cd ~ 

10. sudo reboot
	. reboot the system, if the desktop stop working
	. Alt + Control + f1-f6: open terminal

11. sudo shutdown -h <time>
	. shutdown the computer in a certain time
	. Example: sudo shutdown -h now
			   sudo shutdown -h 15 // 15 minutes
	. If we want to interrupt: sudo shutdown -c

12. man <manualPage>
	. list the manual of <manualPage>, showing how to use it
	. Example: man man
			   man shutdown
			   man mv
			   man ls

13. pwd
	. Giving an absolute path of this directory

14. pushd <directory>
	. Jump to a new directory
	. Example: pushd /Movies

15. popd
	. Jump back to where you are

16. file <nameFile>
	. Find out what kind of file it is: image, directory, ...
	. Example: file .config
			   file LinuxTip

17. locate <phrase>
	. find all the path contain <phrase>, getting from database
	. Example: locate config

18. sudo updatedb
	. Update the database on the computer, if you have administrative
		privilege

19. cal
	. Showing the calendar in the terminal

20. history
	history | les
	. showing all the commands that have entered in the terminal
		(around 1000 commands have been using so far)

21. whatis <command>
	. showing the information about the <command>
		almost the same as: man <command>
	. Example: whatis cal

22. apropos <detail>
	. showing everything relate to <detail>
		<detail>: when you want to know something, but doesn't 
		know the specific about it
	. Example: apropos time

23. mkdir <directory1> <directory2>
	. Creating directories in that directory

24. cp </fileName> <newName>
	. Copy file <filename> from other directory to this directory
		with a new name <newName>
	. Example: cp ~/.bashrc newBashrc // copy from home dir to this dir
			   cp newBashrc bashrc 	  // copy in the same dir 

25. mv <oldFile> <newFile>
	. Remove or rename the file
	. Example: mv bashrc file1

26. rm <fileName>
	. Remove a file <fileName>
	. Example: rm file1
			   rm *
			   rm file*

27. rm -r <directoryName>
	. Remove directory <directoryName>
		recursively remove all the file and then the directory

28. rmdir <emptyDirectory>
	. Can only remove empty directory

29. cat >> <fileName>
	. Whatever do with cat just put at the end of file <fileName>
		Control + C (or D):  exit

30. cat > <fileName>
	. Replace the content in <fileName> with whatever do with cat 

30. cat <file1> <file2>
	. Concatenate the content of <file1> to the end of <file2>

31. more <fileName>
	less <fileName>
	. Almost the same as cat

32. nano <fileName> 
	. Create a file <fileName> (or open an exist file) and open in
		text editor

33. ls -al / > <fileName>
	. get all and put in new file <filename>

34. users
	. Checking who is login to this computer

35. id

36. chmod +x <fileName>
	. Change the mode of <fileName> to become executable for anybody
	(-rwxr - xr - x 1 joe joe 5472 Mar 2 14:12 file1)

37. // Select a "pattern" in a whole directory
    grep -R pattern directory
    Example: grep -R "ToDo" hw2

38. pwd 
	. show the path to the directory/file

39. echo "export GOPATH=/Users/lancedang/GoWorkSpace" >> .bash_profile
	. Adding the line "export GOPATH=/U..../GoWorkSpace" to file.bash_profile 

40. echo $GOPATH
	. Show the path we just add, or other path for other we want to check

41. sudo nano /etc/paths
	. adding a new path (be careful for not messing this file)

42. PATH=$PATH:/usr/local/go/bin
	export PATH=$PATH:/usr/local/go/bin (inside the .bash_profile)
	. adding a new path start from $PATH to find the binary to run 
	. PATH=/root:$PATH
		This is dangerous because someone will take control

43. sudo dpkg -i <file_name.deb>
	. installing a software

44. sudo apt-get <install> <....>
	. install command in the terminal, instead of click on the program package

45. source .bash_profile
	. rerun run the terminal, after adding new feature in the .bash_profile

46. PS1 = "\u-> ";
	export PS1;
# \h the hostname up to the first.
# \s the name of the shell
# \t the current time in 24-hour format 
# \w the current working directory
# \W the basename of the current working directory
	. customize the prompt

47. cd ~/.ssh/
    ssh-keygen -t rsa
        . Create a new pub-private key
        . Will prompt to save the key in a new name file. Ex: my_key
	. Will ask for passphrase, but don't really need too

Purchasing an Virtual Private Server (VPS) on AWS or Digital OCEAN 
then add public key to the server.

48. cat ~/.ssh/my_key.pub
	. Showing what is inside my_key.pub file

48. cat ~/.ssh/my_key.pub | pbcopy
	. Copy everything inside my_key.pub file 

50. ssh -i ~/.ssh/my_key root@$YOUR_SERVER_IP
	. -i is the identity
	. my_key is a specific private key
	. user name: right now is root

51. top
	. Inside the server. top is like a activity minitor
	. top == htop (prettier version of top)
	. If cannot run htop: apt-get install htop
Setting up the server

51. apt-get update
	. update all the software on the server

51. adduser USERNAME
	. Adding username (create new user)
	. since we don't want always running
	. as a root, preventing mistake
	. Provide password (for sudo later on)

Sudo: super user do

52. usermod -aG sudo USERNAME
	. -aG: adding user to group
	. adding USERNAME to sudo group

If seeing "#": it means running as root

53. su USERNAME 
	. su: is switch user, switch to USERNAME
	. Provide password

54. cat /var/log/auth.log
	. permission denied (if not root)

55. sudo !!
    sudo cat /var/log/auth.log
	. !!: is a last command

56. exit
	. To exit

56. ssh USERNAME@YOUR_SERVER_IP
	. Login to the server using the new username just create
	. Provide the password, when create the username

Now try to login without using password

57. cat ~/.ssh/my_key.pub | ssh USERNAME@SERVER_IP "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys" 
	. cat ~/.ssh/my_key.pub | : print the contents of my_key.pub
	. and pipe the output to the next command
	. ssh USERNAME@SERVER_IP : ssh into your server
	. mkdir -p ~/.ssh : make a .ssh folder in your home directory if
	. it doesn't already exist
	. cat >> ~/.ssh/authorized_keys : write the contents of the
	. output to the file authorized_keys
58. ssh -i my_key USERNAME@SERVER_IP
    ssh -i ~/.ssh/my_key USERNAME@SERVER_IP
	. Now we can login without asking for the password
	. However, first time it will ask for password

However, should ever using root login. 
(inside the server)
59. sudo vi /etc/ssh/sshd_config
      PermitRootLogin (no)
      PasswordAuthentication (no)
      (:wq) 
	. Disable root login
	. Change ssh config, sshd (ssh damend)
	. Damend is the process that run in the back of your sever

60. sudo service ssh restart
    sudo service sshd restart
	. Restart ssh (both work)


